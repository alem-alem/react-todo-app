{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","value","ref","useEffect","current","usePrevious","focus","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","Form","setName","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","updatedTasks","map","remainingTasks","filter","editedTaskList","taskList","key","tasksNoun","length","headingText","filterList","newTask","nanoid","role","aria-labelledby","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ae5be55.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\n\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    const editFieldRef = useRef(null);\r\n    const editButtonRef = useRef(null);\r\n\r\n    const wasEditing = usePrevious(isEditing);\r\n\r\n    function handleChange(e) {\r\n        setNewName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.editTask(props.id, newName);\r\n        setNewName(\"\");\r\n        setEditing(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!wasEditing && isEditing) {\r\n            editFieldRef.current.focus();\r\n        }\r\n        if (wasEditing && !isEditing) {\r\n            editButtonRef.current.focus();\r\n        }\r\n    }, [wasEditing, isEditing]);\r\n\r\n    const editingTemplate = (\r\n        <form className=\"stack-small\"\r\n            onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"todo-label\" htmlFor={props.id}>\r\n                    New name for {props.name}\r\n                </label>\r\n                <input\r\n                    id={props.id}\r\n                    className=\"todo-text\"\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={handleChange}\r\n                    ref={editFieldRef}\r\n                />\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn todo-cancel\"\r\n                    onClick={() => setEditing(false)}\r\n                >\r\n                    Cancel\r\n              <span className=\"visually-hidden\">renaming {props.name}</span>\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n                    Save\r\n              <span className=\"visually-hidden\">new name for {props.name}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n    const viewTemplate = (\r\n        <div className=\"stack-small\">\r\n            <div className=\"c-cb\">\r\n                <input\r\n                    id={props.id}\r\n                    type=\"checkbox\"\r\n                    defaultChecked={props.completed}\r\n                    onChange={() => props.toggleTaskCompleted(props.id)}\r\n                />\r\n                <label className=\"todo-label\" htmlFor={props.id}>\r\n                    {props.name}\r\n                </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn\"\r\n                    onClick={() => setEditing(true)}\r\n                    ref={editButtonRef}\r\n                >\r\n                    Edit\r\n                    <span className=\"visually-hidden\">{props.name}</span>\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn__danger\"\r\n                    onClick={() => props.deleteTask(props.id)}\r\n                >\r\n                    Delete\r\n                    <span className=\"visually-hidden\">{props.name}</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n    const [name, setName] = useState(\"\");\r\n\r\n    function handleChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.addTask(name);\r\n        setName(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2 className=\"label-wrapper\">\r\n                <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n                    <h2>To-Do List</h2>\r\n                </label>\r\n            </h2>\r\n            <input\r\n                type=\"text\"\r\n                id=\"new-todo-input\"\r\n                className=\"input input__lg\"\r\n                name=\"text\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                onChange={handleChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n                Add\r\n      </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn toggle-btn\"\r\n            aria-pressed={props.isPressed}\r\n            onClick={() => props.setFilter(props.name)}\r\n        >\r\n            <span className=\"visually-hidden\">Show </span>\r\n            <span>{props.name}</span>\r\n            <span className=\"visually-hidden\"> tasks</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default FilterButton;","import React, { useState } from \"react\";\nimport \"./index.css\"\nimport Todo from './components/Todo'\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport { nanoid } from \"nanoid\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP)\n\nfunction App(props) {\n\n  const [tasks, setTasks] = useState(props.tasks);\n\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, completed: !task.completed }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id)\n    setTasks(remainingTasks)\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return { ...task, name: newName }\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false }\n    setTasks([...tasks, newTask])\n  }\n\n  const [filter, setFilter] = useState('All');\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map(task => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" >\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Learn React\", completed: false },\n  { id: \"todo-1\", name: \"Gym\", completed: false },\n  { id: \"todo-2\", name: \"Sleep\", completed: false }\n];\n\nrender(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// NPM INSTALL REACT-ICONS"],"sourceRoot":""}